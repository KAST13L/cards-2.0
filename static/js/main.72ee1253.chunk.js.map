{"version":3,"sources":["reportWebVitals.ts","features/Login/Login.tsx","features/PasswordRecovery/PasswordRecovery.tsx","features/Profile/Profile.tsx","api/auth-api.ts","app/redux/app-reducer.ts","features/Registration/Registration.tsx","features/EnteringANewPassword/EnteringANewPassword.tsx","features/Welcome/Welcome.tsx","features/Header/Pages.tsx","features/Header/Header.tsx","components/ErrorSnackbar/ErrorSnackbar.tsx","app/App.tsx","app/redux/store.ts","index.tsx","features/Header/Header.module.scss","features/Registration/Registration.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login","className","s","login","PasswordRecovery","passwordRecovery","Profile","profile","instance","axios","create","baseURL","process","REACT_APP_BACK_URL","withCredentials","AuthApi","data","post","initialState","error","status","isInitialized","setAppErrorAC","type","Registration","dispatch","useDispatch","useState","isVisible","setIsVisible","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","formik","useFormik","initialValues","email","password","confirmPassword","validate","values","errors","test","length","onSubmit","registrationValues","res","console","log","catch","e","response","resetForm","emailError","touched","passwordError","confirmPasswordError","registration","Grid","container","justifyContent","handleSubmit","FormControl","form","style","textAlign","FormGroup","InputLabel","OutlinedInput","getFieldProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Button","variant","color","FormLabel","marginTop","to","PATH","LOGIN","EnteringANewPassword","enteringANewPassword","Welcome","welcome","WELCOME","PASSWORD_RECOVERY","REGISTRATION","ENTERING_A_NEW_PASSWORD","PROFILE","Pages","path","element","Header","links","link","isActive","active","Alert","React","forwardRef","props","ref","elevation","ErrorSnackbar","useSelector","state","app","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","sx","width","App","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.72ee1253.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Login.module.scss';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className={s.login}>\r\n            login\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './PasswordRecovery.module.scss';\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.scss';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={s.profile}>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\n","import axios from \"axios\"; // yes\r\n\r\nexport const instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const AuthApi = {\r\n    setNewPass(password: string, token: string) {\r\n        return instance.post(\"/auth/set-new-password\", {password: password, resetPasswordToken: token})\r\n    },\r\n    registration(data: RegistrationParamsType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    },\r\n    recoveryPassword(email: string) {\r\n        return instance.post(\r\n            \"/auth/forgot\",\r\n            {\r\n                email, // кому восстанавливать пароль\r\n                from: \"test-front-admin <ai73a@yandex.by>\",\r\n                // можно указать разработчика фронта)\r\n                message: `<div style=\"background-color: #f7f7f7; padding: 15px\">\r\n                    Follow \r\n                    <a href='http://localhost:3000/#/set-new-password/$token$'>\r\n                    this link</a> to recover your password\r\n                    </div>` // хтмп-письмо, вместо $token$ бэк вставит токен\r\n\r\n            }\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('/auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<{ info: string }>('/auth/me', {})\r\n    },\r\n    authMe() {\r\n        return instance.post('/auth/me', {})\r\n    },\r\n    updateUserInfo(data: UpdateUserInfo) {\r\n        return instance.put('/auth/me', data)\r\n    }\r\n}\r\n\r\n// type\r\nexport type RegistrationParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type UpdateUserInfo = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}","import {AuthApi, RegistrationParamsType} from \"../../api/auth-api\";\r\nimport {ThunkType} from \"./store\";\r\n\r\ntype InitialStateType = {\r\n    error: string | null\r\n    status: RequestStatusType\r\n    isInitialized: boolean\r\n}\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    status: 'idle',\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type){\r\n        case 'SET_APP_ERROR':{\r\n            return {...state, error: action.error}\r\n        }\r\n        case 'SET_APP_STATUS':{\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_APP_INITIALIZED':{\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type:'SET_APP_ERROR', error} as const )\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type:'SET_APP_STATUS', status} as const )\r\nexport const setAppInitializedAC = (isInitialized: boolean) => ({type:'SET_APP_INITIALIZED',isInitialized} as const )\r\n\r\n\r\nexport const registrationTC = (data: RegistrationParamsType): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    AuthApi.registration(data)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            if (e.response.data.error){\r\n                dispatch(setAppErrorAC(e.response.data.error))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC> | ReturnType<typeof setAppInitializedAC>\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'","import React, {useState} from 'react';\r\nimport s from './Registration.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid} from \"@material-ui/core\";\r\nimport {registrationTC} from \"../../app/redux/app-reducer\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Header/Pages\";\r\nimport {RegistrationParamsType} from \"../../api/auth-api\";\r\n\r\n\r\nexport const Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [isVisible, setIsVisible] = useState<boolean>(false)\r\n\r\n    const handleClickShowPassword = () => {\r\n        setIsVisible(!isVisible)\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        confirmPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required'\r\n            } else if (values.confirmPassword.length < 7) {\r\n                errors.confirmPassword = 'Invalid password'\r\n            } else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword = 'passwords must be equal'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            const registrationValues: RegistrationParamsType = {email: values.email, password: values.password}\r\n            dispatch(registrationTC(registrationValues))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    const emailError = formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null\r\n    const passwordError = formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null\r\n    const confirmPasswordError = formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n        <div>{formik.errors.confirmPassword}</div> : null\r\n\r\n    return <div className={s.registration}>\r\n        <Grid container justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl className={s.form}>\r\n                    <h1 style={{textAlign: 'center'}}>\r\n                        SIGN UP\r\n                    </h1>\r\n                    <FormGroup>\r\n                        <FormControl>\r\n                            <InputLabel>Email</InputLabel>\r\n                            <OutlinedInput\r\n                                error={!!emailError}\r\n                                {...formik.getFieldProps('email')}\r\n                            />\r\n                            <div className={s.error}>{emailError}</div>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <InputLabel>Password</InputLabel>\r\n                            <OutlinedInput\r\n                                type={isVisible ? 'text' : 'password'}\r\n                                error={!!passwordError}\r\n                                {...formik.getFieldProps('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {isVisible ? <VisibilityOff/> : <Visibility/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                            <div className={s.error}>{passwordError}</div>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <InputLabel>Confirm password</InputLabel>\r\n                            <OutlinedInput\r\n                                type={isVisible ? 'text' : 'password'}\r\n                                error={!!confirmPasswordError}\r\n                                {...formik.getFieldProps('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {isVisible ? <VisibilityOff/> : <Visibility/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                            <div className={s.error}>{confirmPasswordError}</div>\r\n                        </FormControl>\r\n                        <Button\r\n                            type={'submit'} variant={'contained'} color={'primary'}>\r\n                            Sign up\r\n                        </Button>\r\n                        <FormLabel style={{marginTop: '15px'}}>\r\n                            maybe you want <NavLink to={PATH.LOGIN}>SIGN IN</NavLink>?\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './EnteringANewPassword.module.scss';\r\n\r\nexport const EnteringANewPassword = () => {\r\n    return (\r\n        <div className={s.enteringANewPassword}>\r\n            EnteringANewPassword\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Welcome.module.scss';\r\n\r\nexport const Welcome = () => {\r\n    return (\r\n        <div className={s.welcome}>\r\n            Welcome\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport {Login} from \"../Login/Login\";\nimport {PasswordRecovery} from \"../PasswordRecovery/PasswordRecovery\";\nimport {Profile} from \"../Profile/Profile\";\nimport {Registration} from \"../Registration/Registration\";\nimport {EnteringANewPassword} from \"../EnteringANewPassword/EnteringANewPassword\";\nimport {Welcome} from \"../Welcome/Welcome\";\n\nexport const PATH = {\n    WELCOME: '/welcome',\n    LOGIN: '/login',\n    PASSWORD_RECOVERY: '/passwordRecovery',\n    REGISTRATION: '/registration',\n    ENTERING_A_NEW_PASSWORD: '/enteringANewPassword',\n    PROFILE: '/profile'\n}\n\nexport function Pages() {\n    return (\n        <div>\n            <Routes>\n                <Route path={'/'} element={<Navigate to={PATH.WELCOME}/>}/>\n\n                <Route path={PATH.LOGIN} element={<Login/>}/>\n                <Route path={PATH.PASSWORD_RECOVERY} element={<PasswordRecovery/>}/>\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\n                <Route path={PATH.ENTERING_A_NEW_PASSWORD} element={<EnteringANewPassword/>}/>\n\n                <Route path={'/*'} element={<Welcome/>}/>\n            </Routes>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Pages\";\nimport s from './Header.module.scss'\n\nexport const Header = () => {\n\n    return (\n        <div className={s.container}>\n            <div className={s.links}>\n                <div className={s.link}>\n                    <NavLink className={({isActive}) => isActive ? s.active : ''}\n                             to={PATH.PROFILE}>\n                        Profile\n                    </NavLink></div>\n                <div className={s.link}><NavLink className={({isActive}) => isActive ? s.active : ''}\n                                                 to={PATH.LOGIN}>\n                    Login\n                </NavLink></div>\n                <div className={s.link}><NavLink className={({isActive}) => isActive ? s.active : ''}\n                                                 to={PATH.REGISTRATION}>\n                    Registration\n                </NavLink></div>\n                <div className={s.link}><NavLink className={({isActive}) => isActive ? s.active : ''}\n                                                 to={PATH.PASSWORD_RECOVERY}>\n                    Password recovery+\n                </NavLink></div>\n                <div className={s.link}><NavLink className={({isActive}) => isActive ? s.active : ''}\n                                                 to={PATH.ENTERING_A_NEW_PASSWORD}>\n                    Entering a new password\n                </NavLink></div>\n                <div className={s.link}>Hover me!</div>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport {AppRootStateType} from \"../../app/redux/store\";\r\nimport {setAppErrorAC} from \"../../app/redux/app-reducer\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nexport function ErrorSnackbar() {\r\n\r\n    const error = useSelector<AppRootStateType, string | null >(state => state.app.error)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport {Header} from \"../features/Header/Header\";\nimport {Pages} from \"../features/Header/Pages\";\nimport {ErrorSnackbar} from \"../components/ErrorSnackbar/ErrorSnackbar\";\n\nexport const App = () => {\n    return (\n        <div>\n            <HashRouter>\n                <ErrorSnackbar/>\n                <Header/>\n                <Pages/>\n            </HashRouter>\n        </div>\n    );\n};\n\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type RootActionsType = AppActionsType\r\n\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, RootActionsType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./app/App\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__aGOgC\",\"links\":\"Header_links__3UEMk\",\"link\":\"Header_link__X9MNl\",\"active\":\"Header_active__3y_9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__OSY5c\",\"form\":\"Registration_form__PAYQL\",\"error\":\"Registration_error__3SRYL\"};"],"sourceRoot":""}