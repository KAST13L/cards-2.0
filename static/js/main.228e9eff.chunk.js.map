{"version":3,"sources":["components/EditableSpan/EditableSpan.module.css","components/c7-Loader/Lodader.module.scss","reportWebVitals.ts","app/redux/app-reducer.ts","api/api.ts","app/redux/auth-reducer.ts","app/redux/store.ts","features/Login/LoginMUI.tsx","components/c7-Loader/Loader.tsx","components/VisibleIconFroPassword/VisibleIcon.tsx","features/Login/Login.tsx","features/PasswordRecovery/PasswordRecovery.tsx","components/EditableSpan/EditableSpan.tsx","features/Profile/Profile.tsx","features/Registration/Registration.tsx","features/EnteringANewPassword/EnteringANewPassword.tsx","features/Welcome/Welcome.tsx","features/Header/Pages.tsx","features/Header/Header.tsx","components/ErrorSnackbar/ErrorSnackbar.tsx","app/App.tsx","index.tsx","features/Registration/Registration.module.scss","features/Profile/Profile.module.css","features/Login/Login.module.scss","features/Header/Header.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","status","error","success","isInitialized","setAppErrorAC","type","setAppStatusAC","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","put","_id","email","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","isAuth","isRegister","setIsRegisterAC","updateUserDataInfo","rootReducer","combineReducers","app","state","action","auth","store","createStore","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","window","styleBtn","borderRadius","margin","width","height","textTransform","background","fontSize","fontWeight","color","styleForm","marginTop","padding","textAlign","minHeight","backgroundColor","boxShadow","styleInput","styleRememberMe","styleRequired","Loader","className","s","overlay","progress","CircularProgress","size","VisibleIcon","props","InputAdornment","position","IconButton","onClick","setIsVisible","isVisible","onMouseDown","event","preventDefault","Login","dispatch","loadingStatus","useState","hidden","setHidden","formik","useFormik","initialValues","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","res","response","message","resetForm","to","PATH","PROFILE","login","Grid","container","justifyContent","style","item","handleSubmit","FormControl","variant","FormLabel","styleH1","FormGroup","TextField","id","label","touched","errors","getFieldProps","InputProps","endAdornment","FormControlLabel","control","Checkbox","checked","marginRight","forgotPassword","PASSWORD_RECOVERY","Button","styleP","signUp","REGISTRATION","PasswordRecovery","passwordRecovery","EditableSpan","memo","value","onChange","disabled","editMode","setEditMode","title","setTitle","activateEditMode","checkLength","str","length","saveHandler","textWrapper","e","currentTarget","onKeyDown","key","fullWidth","button","disableElevation","onDoubleClick","icon","Profile","HandlerLogOut","Paper","elevation","ava","backgroundImage","buttonWrapper","updatedUser","updateUserInfo","logOut","sx","startIcon","text","LOGIN","Registration","registration","RegisterForm","confirmPassword","validate","test","registrationValues","catch","finally","emailError","passwordError","confirmPasswordError","form","formLabel","InputLabel","OutlinedInput","EnteringANewPassword","enteringANewPassword","Welcome","welcome","WELCOME","NEW_PASSWORD","Pages","path","element","Header","links","link","NavLinkItem","isActive","active","Alert","React","forwardRef","ref","ErrorSnackbar","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","App","LinearProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.228e9eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"EditableSpan_button__1AkF8\",\"textWrapper\":\"EditableSpan_textWrapper__1sTaW\",\"icon\":\"EditableSpan_icon__ibLtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Lodader_overlay__ZwHt0\",\"progress\":\"Lodader_progress__SsC0S\",\"scaling\":\"Lodader_scaling__5Jeoy\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as null | string,\r\n    success: null as null | string,\r\n    isInitialized: false as boolean\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type){\r\n        case 'SET_APP_ERROR':{\r\n            return {...state, error: action.error}\r\n        }\r\n        case 'SET_APP_STATUS':{\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_APP_INITIALIZED':{\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        case 'SET_APP_SUCCESS':{\r\n            return {...state, success: action.success}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n// action creators\r\nexport const setAppErrorAC = (error: string | null) => ({type:'SET_APP_ERROR', error} as const )\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type:'SET_APP_STATUS', status} as const )\r\nexport const setAppInitializedAC = (isInitialized: boolean) => ({type:'SET_APP_INITIALIZED',isInitialized} as const )\r\nexport const setAppSuccessAC = (success: string | null) => ({type:'SET_APP_SUCCESS',success} as const )\r\n\r\n//types\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppErrorAC> |\r\n    ReturnType<typeof setAppStatusAC> |\r\n    ReturnType<typeof setAppSuccessAC> |\r\n    ReturnType<typeof setAppInitializedAC>\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'development'\r\n        ? 'http://localhost:7542/2.0/'\r\n        : 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// API\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<AuthResponseType>('/auth/login', data)\r\n    },\r\n    register(data: RegisterParamsType) {\r\n        return instance.post<RegisterResponseType>('/auth/register', data)\r\n    },\r\n    me() {\r\n        return instance.post<AuthResponseType>('auth/me', {})\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>('/auth/me')\r\n    },\r\n    updateProfile(data: UpdateProfileDataType) {\r\n        return instance.put<UpdatedUserResponseType>('/auth/me', data)\r\n    },\r\n    forgotPassword(data: ForgotPasswordDataType) {\r\n        return instance.post<DefaultResponseType>('/auth/forgot', data)\r\n    },\r\n    setNewPassword(data: SetPasswordDataType) {\r\n        return instance.post<DefaultResponseType>('/auth/set-new-password', data)\r\n    },\r\n    blockContent(data: BlockContentDataType) {\r\n        return instance.post<BlockContentResponseType>('/auth/block', data)\r\n    }\r\n}\r\n\r\n// request types\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type UpdateProfileDataType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ForgotPasswordDataType = {\r\n    email: string\r\n    message: string\r\n}\r\nexport type SetPasswordDataType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type BlockContentDataType = {\r\n    id: string\r\n    blockReason: string\r\n}\r\n\r\n// response types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport type AuthResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number | null; // количество колод\r\n    created: Date | null;\r\n    updated: Date | null;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string| null;\r\n\r\n    /* ????????\r\n    \"__v\": 0,\r\n    \"token\": \"f1081d00-3614-11ed-b186-bb9b23e58d65\",\r\n    \"tokenDeathTime\": 1663380708944\r\n     */\r\n}\r\n\r\nexport type BlockContentResponseType = {\r\n    user: string\r\n    blockedCardPacksCount: number\r\n}\r\n\r\nexport type AddedUserType = AuthResponseType & {\r\n    __v: number\r\n}\r\n\r\nexport type RegisterResponseType = {\r\n    'addedUser': AddedUserType\r\n}\r\n\r\nexport type UpdatedUserResponseType = {\r\n    updatedUser: AuthResponseType\r\n}","import {setAppErrorAC, setAppStatusAC, setAppSuccessAC} from './app-reducer';\r\nimport {ThunkType} from './store';\r\nimport {authAPI, AuthResponseType, RegisterParamsType} from '../../api/api';\r\n\r\ntype InitialAuthStateType = LoginStateType & {isRegister: boolean}\r\nconst initialState: InitialAuthStateType = {\r\n    data: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,  // количество колод\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n        error: ''\r\n    },\r\n    isAuth: false,\r\n    isRegister: false\r\n}\r\n\r\nexport const authReducer = (state: InitialAuthStateType = initialState, action: AuthActionType): InitialAuthStateType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/GET-USER-DATA':\r\n            return {...state, data: action.data, isAuth: action.isAuth}\r\n        case 'LOGIN/UPDATE-USER-DATA-INFO':\r\n            return {...state, data: action.data}\r\n        case 'SET_IS_REGISTER':{\r\n            return {...state, isRegister: action.isRegister}\r\n        }\r\n        case \"LOG_OUT\":{\r\n            return {...state, isAuth:false, data: {_id: '', email: '', name: '',error:'',rememberMe:false,verified:false,isAdmin:false,updated:null,created:null,avatar:'',publicCardPacksCount:null}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// action\r\nexport const setIsRegisterAC = (isRegister: boolean) => ({type:'SET_IS_REGISTER', isRegister} as const )\r\nexport const getUserData = (data: AuthResponseType, isAuth: boolean) => ({type: 'LOGIN/GET-USER-DATA', data, isAuth} as const)\r\nexport const updateUserDataInfo = (data: AuthResponseType) => ({type: 'LOGIN/UPDATE-USER-DATA-INFO', data} as const)\r\nexport const LogoutAC = () => ({type: 'LOG_OUT'} as const)\r\n\r\n// thunk\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const res = await authAPI.login({email, password, rememberMe})\r\n        dispatch(getUserData(res.data, true));\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n        dispatch(setAppErrorAC(error))\r\n    } finally {\r\n        dispatch(setAppStatusAC('idle'));\r\n    }\r\n}\r\n\r\nexport const registrationTC = (data: RegisterParamsType): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.register(data)\r\n        .then(res => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsRegisterAC(true))\r\n        })\r\n        .catch((e) => {\r\n            if (e.response.data.error){\r\n                dispatch(setAppErrorAC(e.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setIsRegisterAC(false))\r\n        })\r\n}\r\n\r\nexport const updateUserInfo = (name: string, avatar: string): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let temp: string = avatar\r\n        temp = ' '\r\n        const data = {name, avatar: temp}\r\n        const res = await authAPI.updateProfile(data)\r\n        dispatch(updateUserDataInfo(res.data.updatedUser))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n        dispatch(setAppErrorAC(error))\r\n    } finally {\r\n        dispatch(setAppStatusAC('idle'))\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): ThunkType => async (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n        await authAPI.logout()\r\n        dispatch(LogoutAC())\r\n        dispatch(setIsRegisterAC(false))\r\n        dispatch(setAppSuccessAC('You are log out successfully'))\r\n    } catch (e: any) {\r\n        if (e.response.data.error){\r\n            dispatch(setAppErrorAC(e.response.data.error))\r\n            dispatch(setAppStatusAC('failed'))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatusAC('idle'))\r\n    }\r\n}\r\n\r\n// type\r\nexport type AuthActionType =\r\n    ReturnType<typeof getUserData> |\r\n    ReturnType<typeof updateUserDataInfo>|\r\n    ReturnType<typeof LogoutAC>|\r\n    ReturnType<typeof setIsRegisterAC>\r\n\r\ntype LoginStateType = {\r\n    data: AuthResponseType\r\n    isAuth: boolean\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type RootActionsType = AppActionsType | AuthActionType\r\n\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, RootActionsType>\r\nexport type AppDispatch = ThunkDispatch< AppRootStateType, unknown, RootActionsType>\r\n\r\n// hooks\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\n\r\nexport const styleBtn: React.CSSProperties = {\r\n    borderRadius: '18px',\r\n    margin: \"50px auto 30px\",\r\n    width: \"347px\",\r\n    height: \"36px\",\r\n    textTransform: \"none\",\r\n    background: \"#366EFF\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"500\",\r\n    color: \"#fff\"\r\n}\r\nexport const styleForm: React.CSSProperties = {\r\n    marginTop: \"84px\",\r\n    padding: '20px',\r\n    textAlign: 'center',\r\n    width: \"410px\",\r\n    minHeight: \"500px\",\r\n    borderRadius: \"2px\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \"0 0 5px rgba(0,0,0,0.3)\",\r\n}\r\nexport const styleInput: React.CSSProperties = {\r\n    margin: \"20px auto 0\",\r\n    width: \"347px\",\r\n}\r\nexport const styleRememberMe: React.CSSProperties = {\r\n    width: \"347px\",\r\n    margin: \"20px\",\r\n    color: \"#000000\",\r\n    fontSize: \"27px\",\r\n}\r\nexport const styleRequired: React.CSSProperties = {\r\n    fontSize: '13px',\r\n    color: 'red'\r\n}","import React from 'react';\r\nimport s from './Lodader.module.scss'\r\nimport {CircularProgress} from '@material-ui/core';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className={s.overlay}>\r\n            <div className={s.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n","import React from 'react';\r\nimport {IconButton, InputAdornment} from '@material-ui/core';\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\n\r\n\r\ntype VisibleIconPropsType = {\r\n    isVisible: boolean\r\n    setIsVisible: (i: boolean) => void\r\n}\r\n\r\nexport const VisibleIcon = (props: VisibleIconPropsType) => {\r\n\r\n    const handleClickShowPassword = () => {\r\n        props.setIsVisible(!props.isVisible)\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <InputAdornment position=\"end\">\r\n            <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n            >\r\n                {props.isVisible ? <VisibilityOff/> : <Visibility/>}\r\n            </IconButton>\r\n        </InputAdornment>\r\n    );\r\n};\r\n\r\n","import {useAppDispatch, useAppSelector} from '../../app/redux/store';\r\nimport * as Yup from 'yup';\r\nimport {useState} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {loginTC} from '../../app/redux/auth-reducer';\r\nimport {Link, Navigate} from 'react-router-dom';\r\nimport {PATH} from '../Header/Pages';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport s from './Login.module.scss';\r\nimport {styleBtn, styleForm, styleInput, styleRememberMe, styleRequired} from './LoginMUI';\r\nimport {Loader} from '../../components/c7-Loader/Loader';\r\nimport {VisibleIcon} from '../../components/VisibleIconFroPassword/VisibleIcon';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useAppDispatch()\r\n    const isAuth = useAppSelector<boolean>(state => state.auth.isAuth)\r\n    const loadingStatus = useAppSelector<string>(state => state.app.status)\r\n    const [hidden, setHidden] = useState(true)\r\n\r\n    const handleClickShowPassword = () => {\r\n        setHidden(!hidden)\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().required().email('invalid email'),\r\n            password: Yup.string().required().min(7, 'min 7 characters'),\r\n        }),\r\n        onSubmit: (values, {setSubmitting}) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n            setSubmitting(false)\r\n            formik.resetForm();\r\n        }\r\n    })\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={PATH.PROFILE}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            {loadingStatus === 'loading' && <Loader/>}\r\n            <Grid container justifyContent={'center'} style={{padding: '30px'}}>\r\n                <Grid item>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormControl style={styleForm} variant={\"filled\"}>\r\n                            <FormLabel>\r\n                                <h1 className={s.styleH1}>Sign In</h1>\r\n                            </FormLabel>\r\n                            <FormGroup>\r\n                                <TextField\r\n                                    id={'email'}\r\n                                    style={styleInput}\r\n                                    label={'email'}\r\n                                    error={formik.touched.email && !!formik.errors.email}\r\n                                    variant=\"standard\"\r\n                                    {...formik.getFieldProps('email')}\r\n                                />\r\n                                {formik.touched.email\r\n                                    && formik.errors.email\r\n                                    && <div style={styleRequired}>{formik.errors.email}</div>}\r\n                                <TextField\r\n                                    id={'password'}\r\n                                    style={styleInput}\r\n                                    variant=\"standard\"\r\n                                    error={formik.touched.password && !!formik.errors.password}\r\n                                    label={'password'}\r\n                                    type={hidden ? 'password' : 'text'}\r\n                                    {...formik.getFieldProps('password')}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <VisibleIcon isVisible={hidden} setIsVisible={handleClickShowPassword}/>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                {formik.touched.password\r\n                                    && formik.errors.password\r\n                                    && <div style={styleRequired}>{formik.errors.password}</div>}\r\n                                <FormControlLabel\r\n                                    style={styleRememberMe}\r\n                                    label={'Remember me'}\r\n                                    control={<Checkbox color=\"primary\" checked={formik.values.rememberMe}/>}\r\n                                    {...formik.getFieldProps('rememberMe')}\r\n                                />\r\n                                <div style={{textAlign: \"right\", marginRight: \"33px\"}}>\r\n                                    <Link className={s.forgotPassword} to={PATH.PASSWORD_RECOVERY}>Forgot\r\n                                        Password</Link>\r\n                                </div>\r\n                                <Button style={styleBtn} variant=\"contained\" type={'submit'}>Sign In</Button>\r\n                                <FormLabel>\r\n                                    <p className={s.styleP}>Don't have an account?</p>\r\n                                    <Link className={s.signUp} to={PATH.REGISTRATION}>Sign Up</Link>\r\n                                </FormLabel>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport s from './PasswordRecovery.module.scss';\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, KeyboardEvent, memo, useState} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport BorderColorOutlinedIcon from '@mui/icons-material/BorderColorOutlined';\r\nimport s from './EditableSpan.module.css'\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const EditableSpan = memo(({value, onChange, disabled}: EditableSpanPropsType) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(value);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        if (!disabled) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            if(checkLength(title)){\r\n                saveHandler()\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkLength = (str:string) => {\r\n        return str.length > 0\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        onChange(title)\r\n        activateViewMode()\r\n    }\r\n\r\n\r\n\r\n    return editMode\r\n        ? <h3 className={s.textWrapper}>\r\n            <TextField\r\n                value={title}\r\n                size={'small'}\r\n                variant={'standard'}\r\n                onChange={changeTitle}\r\n                onKeyDown={onKeyPressHandler}\r\n                fullWidth={true}\r\n                label={'Nickname'}\r\n            ></TextField>\r\n            <Button\r\n                size={'small'}\r\n                variant={'contained'}\r\n                className={s.button}\r\n                style={{position: 'absolute'}}\r\n                disabled={!checkLength(title)}\r\n                disableElevation\r\n                onClick={saveHandler}\r\n            >\r\n                <p>SAVE</p>\r\n            </Button>\r\n        </h3>\r\n        : <h3 onDoubleClick={activateEditMode} >\r\n            {value}\r\n            <IconButton className={s.icon} onClick={activateEditMode}>\r\n                <BorderColorOutlinedIcon/>\r\n            </IconButton>\r\n        </h3>\r\n})\r\n","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport s from './Profile.module.css'\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppDispatch, useAppSelector} from \"../../app/redux/store\";\r\nimport {logoutTC, updateUserInfo} from '../../app/redux/auth-reducer';\r\nimport {EditableSpan} from \"../../components/EditableSpan/EditableSpan\";\r\nimport {PATH} from \"../Header/Pages\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const {_id, name, email, avatar} = useAppSelector(state => state.auth.data)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const HandlerLogOut = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const HandlerUpdateData = (name: string) => {\r\n        dispatch(updateUserInfo(name, 'https://cdn-icons-png.flaticon.com/512/149/149071.png'))\r\n    }\r\n\r\n    if (!_id) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <Grid container justifyContent={'center'} >\r\n            <Paper elevation={2}>\r\n                <h2>Personal Information</h2>\r\n                <div className={s.ava}\r\n                     style={{backgroundImage: `url(${avatar || 'https://cdn-icons-png.flaticon.com/512/149/149071.png'})`}}>\r\n                    <div className={s.buttonWrapper}>\r\n                        <IconButton className={s.button}>+</IconButton>\r\n                    </div>\r\n                </div>\r\n                <EditableSpan value={name} disabled={false} onChange={HandlerUpdateData}/>\r\n                <p className={s.email}>{email}</p>\r\n                <Button variant={'outlined'} className={s.logOut} sx={{borderRadius: '18px'}}\r\n                        startIcon={<LogoutOutlinedIcon/>} onClick={() => HandlerLogOut()}>\r\n                    <span className={s.text}>Log Out</span>\r\n                </Button>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport s from './Registration.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid, Paper} from \"@material-ui/core\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Header/Pages\";\r\nimport {AppRootStateType} from \"../../app/redux/store\";\r\nimport {RegisterParamsType} from \"../../api/api\";\r\nimport {VisibleIcon} from \"../../components/VisibleIconFroPassword/VisibleIcon\";\r\nimport {registrationTC} from \"../../app/redux/auth-reducer\";\r\n\r\n\r\nexport const Registration = () => {\r\n\r\n    return <Grid container className={s.registration} justifyContent={'center'}>\r\n        <Paper elevation={5} style={{padding: '20px 50px'}}>\r\n            <RegisterForm/>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.auth.isRegister)\r\n    const [isVisible, setIsVisible] = useState<boolean>(false)\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        confirmPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required'\r\n            } else if (values.confirmPassword.length < 8) {\r\n                errors.confirmPassword = 'Invalid password'\r\n            } else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword = 'passwords must be equal'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            const registrationValues: RegisterParamsType = {email: values.email, password: values.password}\r\n            dispatch(registrationTC(registrationValues))\r\n            if (isRegister){\r\n                formik.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    const emailError = formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null\r\n    const passwordError = formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null\r\n    const confirmPasswordError = formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n        <div>{formik.errors.confirmPassword}</div> : null\r\n\r\n    if (isRegister) return <Navigate to={PATH.LOGIN}/>\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <FormControl className={s.form}>\r\n            <h1 className={s.formLabel}>\r\n                SIGN UP\r\n            </h1>\r\n            <FormGroup>\r\n                <FormControl>\r\n                    <InputLabel>Email</InputLabel>\r\n                    <OutlinedInput\r\n                        error={!!emailError}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div className={s.error}>{emailError}</div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Password</InputLabel>\r\n                    <OutlinedInput\r\n                        type={isVisible ? 'text' : 'password'}\r\n                        error={!!passwordError}\r\n                        {...formik.getFieldProps('password')}\r\n                        endAdornment={<VisibleIcon isVisible={isVisible} setIsVisible={setIsVisible}/>}\r\n                    />\r\n                    <div className={s.error}>{passwordError}</div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Confirm password</InputLabel>\r\n                    <OutlinedInput\r\n                        type={isVisible ? 'text' : 'password'}\r\n                        error={!!confirmPasswordError}\r\n                        {...formik.getFieldProps('confirmPassword')}\r\n                        endAdornment={<VisibleIcon isVisible={isVisible} setIsVisible={setIsVisible}/>}\r\n                    />\r\n                    <div className={s.error}>{confirmPasswordError}</div>\r\n                </FormControl>\r\n                <Button\r\n                    type={'submit'} variant={'contained'} color={'primary'}>\r\n                    Sign up\r\n                </Button>\r\n                <FormLabel className={s.formLabel}>\r\n                    <div>Already have an account? <NavLink to={PATH.LOGIN}>SIGN IN</NavLink></div>\r\n                </FormLabel>\r\n            </FormGroup>\r\n        </FormControl>\r\n    </form>\r\n}","import React from 'react';\r\nimport s from './EnteringANewPassword.module.scss';\r\n\r\nexport const EnteringANewPassword = () => {\r\n    return (\r\n        <div className={s.enteringANewPassword}>\r\n            EnteringANewPassword\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Welcome.module.scss';\r\n\r\nexport const Welcome = () => {\r\n    return (\r\n        <div className={s.welcome}>\r\n            Welcome\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Login} from \"../Login/Login\";\r\nimport {PasswordRecovery} from \"../PasswordRecovery/PasswordRecovery\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {EnteringANewPassword} from \"../EnteringANewPassword/EnteringANewPassword\";\r\nimport {Welcome} from \"../Welcome/Welcome\";\r\n\r\nexport const PATH = {\r\n    WELCOME: '/welcome',\r\n    LOGIN: '/login',\r\n    PASSWORD_RECOVERY: '/passwordRecovery',\r\n    REGISTRATION: '/registration',\r\n    NEW_PASSWORD: '/enteringANewPassword',\r\n    PROFILE: '/profile'\r\n}\r\n\r\nexport function Pages() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Navigate to={PATH.WELCOME}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} element={<PasswordRecovery/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} element={<EnteringANewPassword/>}/>\r\n\r\n                <Route path={'/*'} element={<Welcome/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Pages\";\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.links}>\r\n                <NavLinkItem path={PATH.PROFILE} title={'Profile'}/>\r\n                <NavLinkItem path={PATH.LOGIN} title={'Login'}/>\r\n                <NavLinkItem path={PATH.REGISTRATION} title={'Registration'}/>\r\n                <NavLinkItem path={PATH.PASSWORD_RECOVERY} title={'Password recovery+'}/>\r\n                <NavLinkItem path={PATH.NEW_PASSWORD} title={'New password'}/>\r\n                <div className={s.link}>Hover me!</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst NavLinkItem = (props: NavLinkItemPropsType) => {\r\n    return <div className={s.link}>\r\n        <NavLink className={({isActive}) => isActive ? s.active : ''}\r\n                                            to={props.path}\r\n        >{props.title}</NavLink></div>\r\n}\r\ntype NavLinkItemPropsType = {\r\n    path: string\r\n    title: string\r\n}","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\r\nimport {useAppSelector} from \"../../app/redux/store\";\r\nimport {setAppErrorAC} from \"../../app/redux/app-reducer\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nexport function ErrorSnackbar() {\r\n\r\n    const error = useAppSelector(state => state.app.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Header} from \"../features/Header/Header\";\r\nimport {Pages} from \"../features/Header/Pages\";\r\nimport {ErrorSnackbar} from \"../components/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useAppSelector} from \"./redux/store\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\nexport const App = () => {\r\n\r\n    const status = useAppSelector( state => state.app.status)\r\n\r\n    return (\r\n        <div>\r\n            <div style={{height:'5px'}}>{status === 'loading' && <LinearProgress/>}</div>\r\n            <HashRouter>\r\n                <ErrorSnackbar/>\r\n                <Header/>\r\n                <Pages/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./app/App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__11CEM\",\"form\":\"Registration_form__zRR5I\",\"error\":\"Registration_error__2UBon\",\"formLabel\":\"Registration_formLabel__2bq9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Profile_ava__2Dxpe\",\"buttonWrapper\":\"Profile_buttonWrapper__209tv\",\"button\":\"Profile_button__3K0YO\",\"email\":\"Profile_email__GMmF3\",\"logOut\":\"Profile_logOut__1CD5W\",\"text\":\"Profile_text__1VrfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__30RK-\",\"styleH1\":\"Login_styleH1__2mq5T\",\"styleP\":\"Login_styleP__1OBiW\",\"signUp\":\"Login_signUp__3U1GV\",\"forgotPassword\":\"Login_forgotPassword__lSz3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2AHD8\",\"links\":\"Header_links__UVdRO\",\"link\":\"Header_link__3AUhd\",\"active\":\"Header_active__NPa40\"};"],"sourceRoot":""}