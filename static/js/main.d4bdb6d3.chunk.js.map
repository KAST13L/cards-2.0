{"version":3,"sources":["reportWebVitals.ts","features/Login/Login.tsx","features/PasswordRecovery/PasswordRecovery.tsx","features/Profile/Profile.tsx","api/api.ts","app/redux/app-reducer.ts","app/redux/auth-reducer.ts","components/VisibleIconFroPassword/VisibleIcon.tsx","features/Registration/Registration.tsx","features/EnteringANewPassword/EnteringANewPassword.tsx","features/Welcome/Welcome.tsx","features/Header/Pages.tsx","features/Header/Header.tsx","app/redux/store.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","app/App.tsx","index.tsx","features/Registration/Registration.module.scss","features/Header/Header.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login","className","s","login","PasswordRecovery","passwordRecovery","Profile","profile","instance","axios","create","baseURL","withCredentials","authAPI","data","post","initialState","status","error","success","isInitialized","setAppErrorAC","type","setAppStatusAC","isRegister","setIsRegisterAC","VisibleIcon","props","InputAdornment","position","IconButton","onClick","setIsVisible","isVisible","onMouseDown","event","preventDefault","Registration","Grid","container","registration","justifyContent","Paper","elevation","style","padding","RegisterForm","dispatch","useDispatch","useSelector","state","auth","useState","formik","useFormik","initialValues","email","password","confirmPassword","validate","values","errors","test","length","onSubmit","registrationValues","res","catch","e","response","finally","resetForm","emailError","touched","passwordError","confirmPasswordError","to","PATH","LOGIN","handleSubmit","FormControl","form","formLabel","FormGroup","InputLabel","OutlinedInput","getFieldProps","endAdornment","Button","variant","color","FormLabel","EnteringANewPassword","enteringANewPassword","Welcome","welcome","WELCOME","PASSWORD_RECOVERY","REGISTRATION","NEW_PASSWORD","PROFILE","Pages","path","element","Header","links","title","link","NavLinkItem","isActive","active","rootReducer","combineReducers","app","action","store","createStore","applyMiddleware","thunk","useAppSelector","window","Alert","React","forwardRef","ref","ErrorSnackbar","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","sx","width","App","height","LinearProgress","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,wCCTYQ,EAAQ,WACjB,OACI,qBAAKC,UAAWC,IAAEC,MAAlB,kBAIP,E,kBCNYC,EAAmB,WAC5B,OACI,qBAAKH,UAAWC,IAAEG,iBAAlB,6BAIP,E,kBCNYC,EAAU,WACnB,OACI,qBAAKL,UAAWC,IAAEK,QAAlB,oBAIP,E,gHCPYC,E,OAAWC,EAAMC,OAAO,CACjCC,QAEM,uCACNC,iBAAiB,IAKRC,EAAU,SAIVC,GACL,OAAON,EAASO,KAA2B,iBAAkBD,EAChE,ECjBCE,EAAe,CACjBC,OAAQ,OACRC,MAAO,KACPC,QAAS,KACTC,eAAe,GAyBNC,EAAgB,SAACH,GAAD,MAA2B,CAACI,KAAK,gBAAiBJ,QAAlD,EAChBK,EAAiB,SAACN,GAAD,MAAgC,CAACK,KAAK,iBAAkBL,SAAxD,ECvBxBD,EAAiC,CACnCQ,YAAY,GAcHC,EAAkB,SAACD,GAAD,MAA0B,CAACF,KAAK,kBAAmBE,aAAnD,E,wECXlBE,EAAc,SAACC,GASxB,OACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CACI,aAAW,6BACXC,QAXoB,WAC5BJ,EAAMK,cAAcL,EAAMM,UAC7B,EAUWC,YAToB,SAACC,GAC7BA,EAAMC,gBACT,EAIO,SAKKT,EAAMM,UAAY,cAAC,IAAD,IAAmB,cAAC,IAAD,OAIrD,EChBYI,EAAe,WAExB,OAAO,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACtC,UAAWC,IAAEsC,aAAcC,eAAgB,SAA3D,SACH,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAACC,QAAS,aAAtC,SACI,cAAC,EAAD,OAGX,EAEKC,EAAe,WAEjB,IAAMC,EAAWC,cACXxB,EAAayB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAK3B,UAAf,IAC/D,EAAkC4B,oBAAkB,GAApD,mBAAOnB,EAAP,KAAkBD,EAAlB,KAUMqB,EAASC,YAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAErBC,SAAU,SAACC,GACP,IAAMC,EAA0B,CAAC,EAoBjC,OAnBKD,EAAOJ,MAEA,4CAA4CM,KAAKF,EAAOJ,SAChEK,EAAOL,MAAQ,yBAFfK,EAAOL,MAAQ,WAKdI,EAAOH,SAEDG,EAAOH,SAASM,OAAS,IAChCF,EAAOJ,SAAW,oBAFlBI,EAAOJ,SAAW,WAKjBG,EAAOF,gBAEDE,EAAOF,gBAAgBK,OAAS,EACvCF,EAAOH,gBAAkB,mBAClBE,EAAOH,WAAaG,EAAOF,kBAClCG,EAAOH,gBAAkB,2BAJzBG,EAAOH,gBAAkB,WAMtBG,CACV,EACDG,SAAU,SAAAJ,GACN,IF5CmB9C,EE4CbmD,EAAyC,CAACT,MAAOI,EAAOJ,MAAOC,SAAUG,EAAOH,UACtFV,GF7CmBjC,EE6CKmD,EF7CmC,SAAClB,GACpEA,EAASxB,EAAe,YACxBV,EAAiBC,GACZpB,MAAK,SAAAwE,GACFnB,EAASxB,EAAe,cACxBwB,EAAStB,GAAgB,GAC5B,IACA0C,OAAM,SAACC,GACAA,EAAEC,SAASvD,KAAKI,QAChB6B,EAAS1B,EAAc+C,EAAEC,SAASvD,KAAKI,QACvC6B,EAASxB,EAAe,WAE/B,IACA+C,SAAQ,WACLvB,EAAStB,GAAgB,GAC5B,GACR,IE8BeD,GACA6B,EAAOkB,WAEd,IAGCC,EAAanB,EAAOoB,QAAQjB,OAASH,EAAOQ,OAAOL,MAAQ,8BAAMH,EAAOQ,OAAOL,QAAe,KAC9FkB,EAAgBrB,EAAOoB,QAAQhB,UAAYJ,EAAOQ,OAAOJ,SAAW,8BAAMJ,EAAOQ,OAAOJ,WAAkB,KAC1GkB,EAAuBtB,EAAOoB,QAAQf,iBAAmBL,EAAOQ,OAAOH,gBACzE,8BAAML,EAAOQ,OAAOH,kBAAyB,KAEjD,OAAIlC,EAAmB,cAAC,IAAD,CAAUoD,GAAIC,GAAKC,QAEnC,sBAAMd,SAAUX,EAAO0B,aAAvB,SACH,eAACC,EAAA,EAAD,CAAa/E,UAAWC,IAAE+E,KAA1B,UACI,oBAAIhF,UAAWC,IAAEgF,UAAjB,qBAGA,eAACC,EAAA,EAAD,WACI,eAACH,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,oBACA,cAACC,EAAA,EAAD,aACInE,QAASsD,GACLnB,EAAOiC,cAAc,WAE7B,qBAAKrF,UAAWC,IAAEgB,MAAlB,SAA0BsD,OAE9B,eAACQ,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,yBACI/D,KAAMW,EAAY,OAAS,WAC3Bf,QAASwD,GACLrB,EAAOiC,cAAc,aAH7B,IAIIC,aAAc,cAAC,EAAD,CAAatD,UAAWA,EAAWD,aAAcA,OAEnE,qBAAK/B,UAAWC,IAAEgB,MAAlB,SAA0BwD,OAE9B,eAACM,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,+BACA,cAACC,EAAA,EAAD,yBACI/D,KAAMW,EAAY,OAAS,WAC3Bf,QAASyD,GACLtB,EAAOiC,cAAc,oBAH7B,IAIIC,aAAc,cAAC,EAAD,CAAatD,UAAWA,EAAWD,aAAcA,OAEnE,qBAAK/B,UAAWC,IAAEgB,MAAlB,SAA0ByD,OAE9B,cAACa,EAAA,EAAD,CACIlE,KAAM,SAAUmE,QAAS,YAAaC,MAAO,UADjD,qBAIA,cAACC,EAAA,EAAD,CAAW1F,UAAWC,IAAEgF,UAAxB,SACI,4DAA8B,cAAC,IAAD,CAASN,GAAIC,GAAKC,MAAlB,iCAKjD,E,kBC5HYc,EAAuB,WAChC,OACI,qBAAK3F,UAAWC,IAAE2F,qBAAlB,iCAIP,E,qBCNYC,GAAU,WACnB,OACI,qBAAK7F,UAAWC,KAAE6F,QAAlB,oBAIP,ECAYlB,GAAO,CAChBmB,QAAS,WACTlB,MAAO,SACPmB,kBAAmB,oBACnBC,aAAc,gBACdC,aAAc,wBACdC,QAAS,YAGN,SAASC,KACZ,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAU3B,GAAIC,GAAKmB,YAE9C,cAAC,IAAD,CAAOM,KAAMzB,GAAKC,MAAOyB,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAMzB,GAAKoB,kBAAmBM,QAAS,cAAC,EAAD,MAC9C,cAAC,IAAD,CAAOD,KAAMzB,GAAKuB,QAASG,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAMzB,GAAKqB,aAAcK,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAMzB,GAAKsB,aAAcI,QAAS,cAAC,EAAD,MAEzC,cAAC,IAAD,CAAOD,KAAM,KAAMC,QAAS,cAAC,GAAD,UAI3C,C,wBC7BYC,GAAS,WAElB,OACI,qBAAKvG,UAAWC,KAAEqC,UAAlB,SACI,sBAAKtC,UAAWC,KAAEuG,MAAlB,UACI,cAAC,GAAD,CAAaH,KAAMzB,GAAKuB,QAASM,MAAO,YACxC,cAAC,GAAD,CAAaJ,KAAMzB,GAAKC,MAAO4B,MAAO,UACtC,cAAC,GAAD,CAAaJ,KAAMzB,GAAKqB,aAAcQ,MAAO,iBAC7C,cAAC,GAAD,CAAaJ,KAAMzB,GAAKoB,kBAAmBS,MAAO,uBAClD,cAAC,GAAD,CAAaJ,KAAMzB,GAAKsB,aAAcO,MAAO,iBAC7C,qBAAKzG,UAAWC,KAAEyG,KAAlB,2BAIf,EAGKC,GAAc,SAACjF,GACjB,OAAO,qBAAK1B,UAAWC,KAAEyG,KAAlB,SACH,cAAC,IAAD,CAAS1G,UAAW,qBAAE4G,SAAyB3G,KAAE4G,OAAS,EAAtC,EACgBlC,GAAIjD,EAAM2E,KAD9C,SAEE3E,EAAM+E,SACf,E,6BCrBKK,GAAcC,aAAgB,CAChCC,IRCsB,WAAqE,IAApE/D,EAAmE,uDAA3DlC,EAAckG,EAA6C,uCAC1F,OAAQA,EAAO5F,MACX,IAAK,gBACD,OAAO,2BAAI4B,GAAX,IAAkBhC,MAAOgG,EAAOhG,QAEpC,IAAK,iBACD,OAAO,2BAAIgC,GAAX,IAAkBjC,OAAQiG,EAAOjG,SAErC,IAAK,sBACD,OAAO,2BAAIiC,GAAX,IAAkB9B,cAAe8F,EAAO9F,gBAE5C,IAAK,kBACD,OAAO,2BAAI8B,GAAX,IAAkB/B,QAAS+F,EAAO/F,UAEtC,QACI,OAAO+B,EAGlB,EQlBGC,KPGuB,WAAsE,IAArED,EAAoE,uDAA5DlC,EAAckG,EAA8C,uCAC5F,MACS,oBADDA,EAAO5F,KAEA,2BAAI4B,GAAX,IAAkB1B,WAAY0F,EAAO1F,aAG9B0B,CAGlB,IOTYiE,GAAQC,aAAYL,GAAaM,aAAgBC,OAOjDC,GAAyDtE,IAGtEuE,OAAOL,MAAQA,G,cCdTM,GAAQC,IAAMC,YAAuC,SACvDhG,EAAOiG,GACP,OAAO,cAAC,KAAD,aAAUjF,UAAW,EAAGiF,IAAKA,EAAKnC,QAAQ,UAAa9D,GACjE,IAGM,SAASkG,KAEZ,IAAM3G,EAAQqG,IAAe,SAAArE,GAAK,OAAIA,EAAM+D,IAAI/F,KAAd,IAC5B6B,EAAWC,cAEX8E,EAAc,SAAC3F,EAA8B4F,GAChC,cAAXA,GAGJhF,EAAS1B,EAAc,MAC1B,EAED,OACI,cAAC2G,GAAA,EAAD,CAAUC,KAAgB,OAAV/G,EAAgBgH,iBAAkB,IAAMC,QAASL,EAAjE,SACI,cAAC,GAAD,CAAOK,QAASL,EAAaM,SAAS,QAAQC,GAAI,CAACC,MAAO,QAA1D,SACKpH,KAIhB,C,cCxBYqH,GAAM,WAEf,IAAMtH,EAASsG,IAAgB,SAAArE,GAAK,OAAIA,EAAM+D,IAAIhG,MAAd,IAEpC,OACI,gCACI,qBAAK2B,MAAO,CAAC4F,OAAO,OAApB,SAAwC,YAAXvH,GAAwB,cAACwH,GAAA,EAAD,MACrD,eAAC,IAAD,WACI,cAACZ,GAAD,IACA,cAAC,GAAD,IACA,cAACxB,GAAD,SAIf,ECfDqC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUzB,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGR0B,SAASC,eAAe,SAM5BvJ,G,qBClBAwJ,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,2BAA2B,MAAQ,4BAA4B,UAAY,gC,qBCAtJD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,qBAAqB,OAAS,uB","file":"static/js/main.d4bdb6d3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Login.module.scss';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className={s.login}>\r\n            login\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './PasswordRecovery.module.scss';\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.scss';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={s.profile}>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'development'\r\n        ? 'http://localhost:7542/2.0/'\r\n        : 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// API\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<AuthResponseType>('/auth/login', data)\r\n    },\r\n    register(data: RegisterParamsType) {\r\n        return instance.post<RegisterResponseType>('/auth/register', data)\r\n    },\r\n    me() {\r\n        return instance.post<AuthResponseType>('auth/me', {})\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>('/auth/me')\r\n    },\r\n    updateProfile(data: UpdateProfileDataType) {\r\n        return instance.put<UpdatedUserResponseType>('/auth/me', data)\r\n    },\r\n    forgotPassword(data: ForgotPasswordDataType) {\r\n        return instance.post<DefaultResponseType>('/auth/forgot', data)\r\n    },\r\n    setNewPassword(data: SetPasswordDataType) {\r\n        return instance.post<DefaultResponseType>('/auth/set-new-password', data)\r\n    },\r\n    blockContent(data: BlockContentDataType) {\r\n        return instance.post<BlockContentResponseType>('/auth/block', data)\r\n    }\r\n}\r\n\r\n// request types\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type UpdateProfileDataType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ForgotPasswordDataType = {\r\n    email: string\r\n    message: string\r\n}\r\nexport type SetPasswordDataType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type BlockContentDataType = {\r\n    id: string\r\n    blockReason: string\r\n}\r\n\r\n// response types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport type AuthResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n\r\n    /* ????????\r\n    \"__v\": 0,\r\n    \"token\": \"f1081d00-3614-11ed-b186-bb9b23e58d65\",\r\n    \"tokenDeathTime\": 1663380708944\r\n     */\r\n}\r\n\r\nexport type BlockContentResponseType = {\r\n    user: string\r\n    blockedCardPacksCount: number\r\n}\r\n\r\nexport type AddedUserType = AuthResponseType & {\r\n    __v: number\r\n}\r\n\r\nexport type RegisterResponseType = {\r\n    'addedUser': AddedUserType\r\n}\r\n\r\nexport type UpdatedUserResponseType = {\r\n    updatedUser: AuthResponseType\r\n}","const initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as null | string,\r\n    success: null as null | string,\r\n    isInitialized: false as boolean\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type){\r\n        case 'SET_APP_ERROR':{\r\n            return {...state, error: action.error}\r\n        }\r\n        case 'SET_APP_STATUS':{\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_APP_INITIALIZED':{\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        case 'SET_APP_SUCCESS':{\r\n            return {...state, success: action.success}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n// action creators\r\nexport const setAppErrorAC = (error: string | null) => ({type:'SET_APP_ERROR', error} as const )\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type:'SET_APP_STATUS', status} as const )\r\nexport const setAppInitializedAC = (isInitialized: boolean) => ({type:'SET_APP_INITIALIZED',isInitialized} as const )\r\nexport const setAppSuccessAC = (success: string | null) => ({type:'SET_APP_SUCCESS',success} as const )\r\n\r\n//types\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppErrorAC> |\r\n    ReturnType<typeof setAppStatusAC> |\r\n    ReturnType<typeof setAppSuccessAC> |\r\n    ReturnType<typeof setAppInitializedAC>\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'","import {authAPI, RegisterParamsType} from \"../../api/api\";\r\nimport {ThunkType} from \"./store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\";\r\n\r\ntype InitialStateType = {\r\n    isRegister: boolean\r\n}\r\nconst initialState: InitialStateType = {\r\n    isRegister: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type){\r\n        case 'SET_IS_REGISTER':{\r\n            return {...state, isRegister: action.isRegister}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setIsRegisterAC = (isRegister: boolean) => ({type:'SET_IS_REGISTER', isRegister} as const )\r\n\r\nexport const registrationTC = (data: RegisterParamsType): ThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.register(data)\r\n        .then(res => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsRegisterAC(true))\r\n        })\r\n        .catch((e) => {\r\n            if (e.response.data.error){\r\n                dispatch(setAppErrorAC(e.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setIsRegisterAC(false))\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setIsRegisterAC>","import React from 'react';\r\nimport {IconButton, InputAdornment} from '@material-ui/core';\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\n\r\n\r\ntype VisibleIconPropsType = {\r\n    isVisible: boolean\r\n    setIsVisible: (i: boolean) => void\r\n}\r\n\r\nexport const VisibleIcon = (props: VisibleIconPropsType) => {\r\n\r\n    const handleClickShowPassword = () => {\r\n        props.setIsVisible(!props.isVisible)\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <InputAdornment position=\"end\">\r\n            <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n            >\r\n                {props.isVisible ? <VisibilityOff/> : <Visibility/>}\r\n            </IconButton>\r\n        </InputAdornment>\r\n    );\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Registration.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid, Paper} from \"@material-ui/core\";\r\nimport {registrationTC} from \"../../app/redux/auth-reducer\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Header/Pages\";\r\nimport {AppRootStateType} from \"../../app/redux/store\";\r\nimport {RegisterParamsType} from \"../../api/api\";\r\nimport {VisibleIcon} from \"../../components/VisibleIconFroPassword/VisibleIcon\";\r\n\r\n\r\nexport const Registration = () => {\r\n\r\n    return <Grid container className={s.registration} justifyContent={'center'}>\r\n        <Paper elevation={5} style={{padding: '20px 50px'}}>\r\n            <RegisterForm/>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.auth.isRegister)\r\n    const [isVisible, setIsVisible] = useState<boolean>(false)\r\n\r\n\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        confirmPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required'\r\n            } else if (values.confirmPassword.length < 8) {\r\n                errors.confirmPassword = 'Invalid password'\r\n            } else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword = 'passwords must be equal'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            const registrationValues: RegisterParamsType = {email: values.email, password: values.password}\r\n            dispatch(registrationTC(registrationValues))\r\n            if (isRegister){\r\n                formik.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    const emailError = formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null\r\n    const passwordError = formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null\r\n    const confirmPasswordError = formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n        <div>{formik.errors.confirmPassword}</div> : null\r\n\r\n    if (isRegister) return <Navigate to={PATH.LOGIN}/>\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <FormControl className={s.form}>\r\n            <h1 className={s.formLabel}>\r\n                SIGN UP\r\n            </h1>\r\n            <FormGroup>\r\n                <FormControl>\r\n                    <InputLabel>Email</InputLabel>\r\n                    <OutlinedInput\r\n                        error={!!emailError}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    <div className={s.error}>{emailError}</div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Password</InputLabel>\r\n                    <OutlinedInput\r\n                        type={isVisible ? 'text' : 'password'}\r\n                        error={!!passwordError}\r\n                        {...formik.getFieldProps('password')}\r\n                        endAdornment={<VisibleIcon isVisible={isVisible} setIsVisible={setIsVisible}/>}\r\n                    />\r\n                    <div className={s.error}>{passwordError}</div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Confirm password</InputLabel>\r\n                    <OutlinedInput\r\n                        type={isVisible ? 'text' : 'password'}\r\n                        error={!!confirmPasswordError}\r\n                        {...formik.getFieldProps('confirmPassword')}\r\n                        endAdornment={<VisibleIcon isVisible={isVisible} setIsVisible={setIsVisible}/>}\r\n                    />\r\n                    <div className={s.error}>{confirmPasswordError}</div>\r\n                </FormControl>\r\n                <Button\r\n                    type={'submit'} variant={'contained'} color={'primary'}>\r\n                    Sign up\r\n                </Button>\r\n                <FormLabel className={s.formLabel}>\r\n                    <div>Already have an account? <NavLink to={PATH.LOGIN}>SIGN IN</NavLink></div>\r\n                </FormLabel>\r\n            </FormGroup>\r\n        </FormControl>\r\n    </form>\r\n}","import React from 'react';\r\nimport s from './EnteringANewPassword.module.scss';\r\n\r\nexport const EnteringANewPassword = () => {\r\n    return (\r\n        <div className={s.enteringANewPassword}>\r\n            EnteringANewPassword\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Welcome.module.scss';\r\n\r\nexport const Welcome = () => {\r\n    return (\r\n        <div className={s.welcome}>\r\n            Welcome\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Login} from \"../Login/Login\";\r\nimport {PasswordRecovery} from \"../PasswordRecovery/PasswordRecovery\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {EnteringANewPassword} from \"../EnteringANewPassword/EnteringANewPassword\";\r\nimport {Welcome} from \"../Welcome/Welcome\";\r\n\r\nexport const PATH = {\r\n    WELCOME: '/welcome',\r\n    LOGIN: '/login',\r\n    PASSWORD_RECOVERY: '/passwordRecovery',\r\n    REGISTRATION: '/registration',\r\n    NEW_PASSWORD: '/enteringANewPassword',\r\n    PROFILE: '/profile'\r\n}\r\n\r\nexport function Pages() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Navigate to={PATH.WELCOME}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} element={<PasswordRecovery/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} element={<EnteringANewPassword/>}/>\r\n\r\n                <Route path={'/*'} element={<Welcome/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Pages\";\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.links}>\r\n                <NavLinkItem path={PATH.PROFILE} title={'Profile'}/>\r\n                <NavLinkItem path={PATH.LOGIN} title={'Login'}/>\r\n                <NavLinkItem path={PATH.REGISTRATION} title={'Registration'}/>\r\n                <NavLinkItem path={PATH.PASSWORD_RECOVERY} title={'Password recovery+'}/>\r\n                <NavLinkItem path={PATH.NEW_PASSWORD} title={'New password'}/>\r\n                <div className={s.link}>Hover me!</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst NavLinkItem = (props: NavLinkItemPropsType) => {\r\n    return <div className={s.link}>\r\n        <NavLink className={({isActive}) => isActive ? s.active : ''}\r\n                                            to={props.path}\r\n        >{props.title}</NavLink></div>\r\n}\r\ntype NavLinkItemPropsType = {\r\n    path: string\r\n    title: string\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type RootActionsType = AppActionsType | AuthActionsType\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, RootActionsType>\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\r\nimport {useAppSelector} from \"../../app/redux/store\";\r\nimport {setAppErrorAC} from \"../../app/redux/app-reducer\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nexport function ErrorSnackbar() {\r\n\r\n    const error = useAppSelector(state => state.app.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Header} from \"../features/Header/Header\";\r\nimport {Pages} from \"../features/Header/Pages\";\r\nimport {ErrorSnackbar} from \"../components/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useAppSelector} from \"./redux/store\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\nexport const App = () => {\r\n\r\n    const status = useAppSelector( state => state.app.status)\r\n\r\n    return (\r\n        <div>\r\n            <div style={{height:'5px'}}>{status === 'loading' && <LinearProgress/>}</div>\r\n            <HashRouter>\r\n                <ErrorSnackbar/>\r\n                <Header/>\r\n                <Pages/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./app/App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__OSY5c\",\"form\":\"Registration_form__PAYQL\",\"error\":\"Registration_error__3SRYL\",\"formLabel\":\"Registration_formLabel__1M3OE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__aGOgC\",\"links\":\"Header_links__3UEMk\",\"link\":\"Header_link__X9MNl\",\"active\":\"Header_active__3y_9i\"};"],"sourceRoot":""}